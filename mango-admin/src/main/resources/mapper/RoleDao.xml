<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soapman.dao.RoleDao">

    <resultMap type="com.soapman.entity.Role" id="RoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="lastUpdateBy" column="last_update_by" jdbcType="VARCHAR"/>
        <result property="lastUpdateTime" column="last_update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select id,
               name,
               remark,
               create_by,
               create_time,
               last_update_by,
               last_update_time,
               del_flag
        from sys_role
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryByPage" resultMap="RoleMap">
        select
        id, name, remark, create_by, create_time, last_update_by, last_update_time, del_flag
        from sys_role
        <where>
            <if test="role.id != null">
                and id = #{role.id}
            </if>
            <if test="role.name != null and role.name != ''">
                and name = #{role.name}
            </if>
            <if test="role.remark != null and role.remark != ''">
                and remark = #{role.remark}
            </if>
            <if test="role.createBy != null and role.createBy != ''">
                and create_by = #{role.createBy}
            </if>
            <if test="role.createTime != null">
                and create_time = #{role.createTime}
            </if>
            <if test="role.lastUpdateBy != null and role.lastUpdateBy != ''">
                and last_update_by = #{role.lastUpdateBy}
            </if>
            <if test="role.lastUpdateTime != null">
                and last_update_time = #{role.lastUpdateTime}
            </if>
            <if test="role.delFlag != null">
                and del_flag = #{role.delFlag}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="createBy != null and createBy != ''">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="lastUpdateBy != null and lastUpdateBy != ''">
                and last_update_by = #{lastUpdateBy}
            </if>
            <if test="lastUpdateTime != null">
                and last_update_time = #{lastUpdateTime}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sys_role(name, remark, create_by, create_time, last_update_by, last_update_time, del_flag)
        values (#{name}, #{remark}, #{createBy}, #{createTime}, #{lastUpdateBy}, #{lastUpdateTime}, #{delFlag})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_role(name, remark, create_by, create_time, last_update_by, last_update_time, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.remark}, #{entity.createBy}, #{entity.createTime}, #{entity.lastUpdateBy},
            #{entity.lastUpdateTime}, #{entity.delFlag})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_role(name, remark, create_by, create_time, last_update_by, last_update_time, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.remark}, #{entity.createBy}, #{entity.createTime}, #{entity.lastUpdateBy},
            #{entity.lastUpdateTime}, #{entity.delFlag})
        </foreach>
        on duplicate key update
        name = values(name),
        remark = values(remark),
        create_by = values(create_by),
        create_time = values(create_time),
        last_update_by = values(last_update_by),
        last_update_time = values(last_update_time),
        del_flag = values(del_flag)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_role
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="lastUpdateBy != null and lastUpdateBy != ''">
                last_update_by = #{lastUpdateBy},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from sys_role
        where id = #{id}
    </delete>

</mapper>

